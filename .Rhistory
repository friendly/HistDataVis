library(readr)
TOGS_lof4 <- read_delim("figureinfo/TOGS-lof4.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(TOGS_lof4)
library(data.table)
library(stringr)
library(glue)
library(rmarkdown)
source("utils.R")
togs = as.data.table(
openxlsx::read.xlsx("figureinfo/TOGS-lof5.xlsx")
)
distill_setup = readLines("Distill Page Setup.txt")
chap_rmds = list.files(path = "Synopsis RMDs", pattern = "ch.+\\.Rmd")
for (f in chap_rmds) {
chapnum = as.numeric(str_extract(f, "[0-9]+"))
togs_chap = togs[chapter == chapnum]
in_rmd = readLines(str_c("Synopsis RMDs/",f))
rmd_mod = c(distill_setup, in_rmd, "")
rmd_mod[2] = glue(rmd_mod[2])
for (r in 1:nrow(togs_chap)) {
newchunk = create_figure_chunk(togs_chap[r, filename],
togs_chap[r, title], togs_chap[r, subtitle],
togs_chap[r, fignum])
rmd_mod = c(rmd_mod, "",
str_split(newchunk, "\n")[[1]], "")
}
outrmd = file(glue("{f}"))
writeLines(rmd_mod, outrmd)
#render(f)
}
library(data.table)
library(stringr)
library(glue)
library(rmarkdown)
source("utils.R")
togs = as.data.table(
openxlsx::read.xlsx("figureinfo/TOGS-lof5.xlsx")
)
distill_setup = readLines("Distill Page Setup.txt")
chap_rmds = list.files(path = "Synopsis RMDs", pattern = "ch.+\\.Rmd")
for (f in chap_rmds) {
chapnum = as.numeric(str_extract(f, "[0-9]+"))
togs_chap = togs[chapter == chapnum]
in_rmd = readLines(str_c("Synopsis RMDs/",f))
rmd_mod = c(distill_setup, in_rmd, "")
rmd_mod[2] = glue(rmd_mod[2])
for (r in 1:nrow(togs_chap)) {
newchunk = create_figure_chunk(togs_chap[r, filename],
togs_chap[r, title], togs_chap[r, subtitle],
togs_chap[r, fignum])
rmd_mod = c(rmd_mod, "",
str_split(newchunk, "\n")[[1]], "")
}
outrmd = file(glue("{f}"))
writeLines(rmd_mod, outrmd)
#render(f)
}
getwd()
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
fig_desc
fig_alt <- str_extract(fig_desc, '.*?[a-z0-9][.?!](?= )')
fig_alt
# construct the <img src=> allowing for two or more figure files
img_src = ""
comma_count = str_count(image_path, ",")+1
if (comma_count > 1) {
fnames = str_trim(
str_split(image_path, ",")[[1]]
)
# extract the first sentence in `fig_desc` as the alt string
# from: https://stackoverflow.com/questions/48884868/extract-first-sentence-in-string
fig_alt <- str_extract(fig_desc, '.*?[a-z0-9][.?!](?= )')
fig_alt <- glue("{fig_title}: {fig_alt}")
for (fn in fnames) {
final_fn = glue("{image_folder}/{fn}")
img_src = str_c(img_src, glue("<img src={single_quote(final_fn)} alt={single_quote(fig_alt)} width={width}> \n " ))
}
} else {
final_path = glue("{image_folder}/{image_path}")
img_src = glue("<img src={single_quote(final_path)} alt={single_quote(fig_alt)} width={width}>")
}
# extract the first sentence in `fig_desc` as the alt string
# from: https://stackoverflow.com/questions/48884868/extract-first-sentence-in-string
fig_alt <- str_extract(fig_desc, '.*?[a-z0-9][.?!](?= )')
fig_alt <- glue("{fig_title}: {fig_alt}")
for (fn in fnames) {
final_fn = glue("{image_folder}/{fn}")
img_src = str_c(img_src, glue("<img src={single_quote(final_fn)} alt={single_quote(fig_alt)} width={width}> \n " ))
}
if (comma_count > 1) {
fnames = str_trim(
str_split(image_path, ",")[[1]]
)
# extract the first sentence in `fig_desc` as the alt string
# from: https://stackoverflow.com/questions/48884868/extract-first-sentence-in-string
fig_alt <- str_extract(fig_desc, '.*?[a-z0-9][.?!](?= )')
fig_alt <- glue("{fig_title}: {fig_alt}")
for (fn in fnames) {
final_fn = glue("{image_folder}/{fn}")
img_src = str_c(img_src, glue("<img src={single_quote(final_fn)} alt={single_quote(fig_alt)} width={width}> \n " ))
}
} else {
final_path = glue("{image_folder}/{image_path}")
img_src = glue("<img src={single_quote(final_path)} alt={single_quote(fig_alt)} width={width}>")
}
#  header = glue("#### Figure {fignum}: {fig_title}")
header = glue("<h3 class='figtitle'>Figure {fignum}: {fig_title}</h3>")
# use glue features to make to output more readable
template = glue('
<table class="chap-fig">
<tr>
<td>
{img_src}
</td>
<td class="chap-fig-desc">
{header}
{fig_desc}
</td>
</tr>
</table>
'
# use glue features to make to output more readable
template = glue('
<table class="chap-fig">
<tr>
<td>
{img_src}
</td>
<td class="chap-fig-desc">
{header}
{fig_desc}
</td>
</tr>
</table>
'
)
)
>
;
''
do_chapter(1)
library(data.table)
library(stringr)
library(glue)
library(rmarkdown)
source("utils.R")
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
do_chapter(1)
# construct the <img src=> allowing for two or more figure files
img_src = ""
comma_count = str_count(image_path, ",")+1
if (comma_count > 1) {
fnames = str_trim(
str_split(image_path, ",")[[1]]
)
# extract the first sentence in `fig_desc` as the alt string
# from: https://stackoverflow.com/questions/48884868/extract-first-sentence-in-string
fig_alt <- str_extract(fig_desc, '.*?[a-z0-9][.?!](?= )')
fig_alt <- glue("{fig_title}: {fig_alt}")
for (fn in fnames) {
final_fn = glue("{image_folder}/{fn}")
img_src = str_c(img_src, glue("<img src={single_quote(final_fn)} alt={single_quote(fig_alt)} width={width}> \n " ))
}
} else {
final_path = glue("{image_folder}/{image_path}")
img_src = glue("<img src={single_quote(final_path)} alt={single_quote(fig_alt)} width={width}>")
}
do_chapter(1)
# construct the <img src=> allowing for two or more figure files
img_src = ""
comma_count = str_count(image_path, ",")+1
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/R/chapter_figs.R')
do_chapter(1)
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
in_chunks
in_chunks[5] = glue(in_chunks[5])
in_chunks
f
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
source('/mnt/goliath/Business Files/Dropbox/HistDataVis/Output Distill Chapter RMDs.R')
library(devtools)
usethis::edit_r_profile()
usethis::use_github()
?knitr::include_graphics
figureinfo <- openxlsx::read.xlsx("figureinfo/TOGS-lof5.xlsx")
View(figureinfo)
statquotes::search_quotes("first")
statquotes::search_quotes("navigation")
statquotes::search_quotes("mariners")
statquotes::search_quotes("graph")
statquotes::search_quotes("history")
file.create(".nojekyll")
figureinfo <- openxlsx::read.xlsx("figureinfo/TOGS-lof5.xlsx")
fi1 <- figureinfo[1,]
names(fi1)
fi1$fignum
fi1$filename
fi1$source
library(glue)
library(readr)
library(stringr)
library(rmarkdown)
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
figure_chunk(figureinfo[1,])
image_folder <- "figs-web"
figure_chunk(figureinfo[1,])
cat(figure_chunk(figureinfo[1,]))
cat(figure_chunk(figureinfo[2,]))
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
cat(figure_chunk(figureinfo[2,]))
template
fig_title
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
cat(figure_chunk(figureinfo[2,]))
x
x$filename
image_path
fig_desc
fig_source
header
figtype
glue("<h3 class='figtitle'>{figtype} {fignum}: {fig_title}</h3>")
glue_data("<h3 class='figtitle'>{figtype} {fignum}: {fig_title}</h3>")
fig_alt
fig_src
fig_src
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
do_chapter(1)
source('C:/R/Rprojects/HistDataVis/R/chapter_figs.R')
source('C:/R/Rprojects/HistDataVis/R/figure_chunk.R')
do_chapter(1)
